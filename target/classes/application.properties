# ======================
# Database 数据库
# ======================

app.db.type=h2
# 数据库类型。当前阶段仅支持 h2（嵌入式文件库）。
# 后续会扩展：sqlite / postgres（云版）。
# 变更影响：Database.start() 的连接实现与 Flyway 迁移目标。

app.db.path=./data/memo
# H2 文件库的“前缀路径”（不要写扩展名）。实际文件如：
#   ./data/memo.mv.db
# 搬迁/备份时复制这个文件即可。后续若切换 sqlite，也沿用同一目录策略。

# ======================
# Study 调度相关（弹窗频率等）
# ======================

app.study.batch-size=3
# 预留字段（下一阶段会用）：单次学习批量大小/预取数。
# 现在版本未启用，不影响运行。后面用于“主学习窗连做 N 张”或预取缓存。

app.study.min-interval-minutes=20
app.study.max-interval-minutes=60
# 定时调度器的随机区间（单位：分钟）。每次 tick 结束后，
# 下次触发 = [min, max] 之间随机一个整数分钟。
# 注：你文件里后面又写了一组 1~2 分钟，会覆盖这里（见下文“清理建议”）。

# ======================
# H2 Console（Web 控制台）
# ======================

app.h2.console.enabled=true
# 是否启用 H2 控制台（仅本机）。建议开发期开启，打包给他人时可关闭。

app.h2.console.port=8082
# 控制台端口。被占用时改个空闲端口（如 8083）。

app.h2.console.allow-others=false
# 是否允许局域网其他机器访问控制台：
# false = 仅本机（安全，默认）；true = 允许局域网访问（请谨慎）。

# ======================
# UI 外观（隐蔽横幅）
# ======================

app.window.opacity=0.90
# Stealth 横幅的不透明度（0.0~1.0）。数值越小越透明，越不打扰。

app.window.stealth.height=56
# 横幅高度（像素）。可按自己屏幕和任务栏高度微调。

# ======================
# （你当前文件里的覆盖项：用于快速联调）
# ======================

app.study.min-interval-minutes=1
app.study.max-interval-minutes=2
# ⚠️ 注意：properties 后者覆盖前者！
# 这两行会覆盖前面的 20/60，实际运行中的调度区间是 1~2 分钟。
# 适合开发调试，别忘了回改到 20/60 以免打扰日常工作。

# ======================
# 调度器快捷功能（托盘里的 Snooze）
# ======================

app.study.snooze-minutes=1
# 托盘菜单“Snooze N min”的默认值（单位：分钟）。
# 作用：把“下一次调度 tick”延后 N 分钟（针对全局调度器，不是单卡）。

# 当没有 due/new 卡时是否兜底显示一张
app.study.force-show-when-empty=true
# true（默认）：即使队列空，也会给一张非暂停卡，避免“冷场”；
# false：严格按 SRS 队列，无卡就不打扰。更接近 Anki 严格模式。

# ======================
# “隐藏=稍后提醒” 行为（横幅右上角 × / ESC）
# ======================

app.study.snooze-on-hide-enabled=true
# true：当你点击 × 或按 ESC 隐藏横幅时，把当前这张卡的 due_at 推迟 N 分钟（见下一行），
# 并将新卡置为 learning 状态。避免“总是这张”的体验；
# false：隐藏只隐藏，不改计划（下次可能还是同一张）。

app.study.snooze-on-hide-minutes=10
# “隐藏=稍后提醒”的延后分钟数（仅对当前卡生效）。
# 建议：10~15 分钟。工作忙时能喘口气，但不会丢失这张卡。
